{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8001/api/v1';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('access_token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle token refresh\napi.interceptors.response.use(response => response, async error => {\n  var _error$response;\n  const originalRequest = error.config;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    try {\n      const refreshToken = localStorage.getItem('refresh_token');\n      if (refreshToken) {\n        const response = await axios.post(`${API_BASE_URL}/auth/refresh/`, {\n          refresh: refreshToken\n        });\n        const {\n          access\n        } = response.data;\n        localStorage.setItem('access_token', access);\n        originalRequest.headers.Authorization = `Bearer ${access}`;\n        return api(originalRequest);\n      }\n    } catch (refreshError) {\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n      window.location.href = '/login';\n    }\n  }\n  return Promise.reject(error);\n});\nexport const authService = {\n  login: async credentials => {\n    const response = await api.post('/auth/token/', credentials);\n    const {\n      access,\n      refresh\n    } = response.data;\n    localStorage.setItem('access_token', access);\n    localStorage.setItem('refresh_token', refresh);\n    return {\n      access,\n      refresh\n    };\n  },\n  register: async data => {\n    const response = await api.post('/auth/register/', data);\n    return response.data;\n  },\n  getProfile: async () => {\n    const response = await api.get('/users/profile/');\n    return response.data;\n  },\n  logout: () => {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('refresh_token');\n  }\n};\nexport const courseService = {\n  getCourses: async () => {\n    const response = await api.get('/academics/courses/');\n    return response.data;\n  }\n};\nexport const applicationService = {\n  getApplications: async () => {\n    const response = await api.get('/admissions/applications/');\n    return response.data;\n  }\n};\nexport const hrService = {\n  getEmployees: async () => {\n    const response = await api.get('/hr/employees/');\n    return response.data;\n  },\n  getLeaves: async () => {\n    const response = await api.get('/hr/leaves/');\n    return response.data;\n  }\n};\nexport const financeService = {\n  getStudentFees: async studentId => {\n    const response = await api.get(`/finance/students/${studentId}/fees/`);\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","originalRequest","status","_retry","refreshToken","post","refresh","access","data","setItem","refreshError","removeItem","window","location","href","authService","login","credentials","register","getProfile","get","logout","courseService","getCourses","applicationService","getApplications","hrService","getEmployees","getLeaves","financeService","getStudentFees","studentId"],"sources":["/Users/aniketvyas/Desktop/newOnePCursor/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { AuthTokens, LoginCredentials, RegisterData, User } from '../types/auth';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8001/api/v1';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('access_token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor to handle token refresh\napi.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    const originalRequest = error.config;\n    \n    if (error.response?.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true;\n      \n      try {\n        const refreshToken = localStorage.getItem('refresh_token');\n        if (refreshToken) {\n          const response = await axios.post(`${API_BASE_URL}/auth/refresh/`, {\n            refresh: refreshToken,\n          });\n          \n          const { access } = response.data;\n          localStorage.setItem('access_token', access);\n          \n          originalRequest.headers.Authorization = `Bearer ${access}`;\n          return api(originalRequest);\n        }\n      } catch (refreshError) {\n        localStorage.removeItem('access_token');\n        localStorage.removeItem('refresh_token');\n        window.location.href = '/login';\n      }\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\nexport const authService = {\n  login: async (credentials: LoginCredentials): Promise<AuthTokens> => {\n    const response = await api.post('/auth/token/', credentials);\n    const { access, refresh } = response.data;\n    localStorage.setItem('access_token', access);\n    localStorage.setItem('refresh_token', refresh);\n    return { access, refresh };\n  },\n\n  register: async (data: RegisterData): Promise<User> => {\n    const response = await api.post('/auth/register/', data);\n    return response.data;\n  },\n\n  getProfile: async (): Promise<User> => {\n    const response = await api.get('/users/profile/');\n    return response.data;\n  },\n\n  logout: () => {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('refresh_token');\n  },\n};\n\nexport const courseService = {\n  getCourses: async () => {\n    const response = await api.get('/academics/courses/');\n    return response.data;\n  },\n};\n\nexport const applicationService = {\n  getApplications: async () => {\n    const response = await api.get('/admissions/applications/');\n    return response.data;\n  },\n};\n\nexport const hrService = {\n  getEmployees: async () => {\n    const response = await api.get('/hr/employees/');\n    return response.data;\n  },\n  \n  getLeaves: async () => {\n    const response = await api.get('/hr/leaves/');\n    return response.data;\n  },\n};\n\nexport const financeService = {\n  getStudentFees: async (studentId: number) => {\n    const response = await api.get(`/finance/students/${studentId}/fees/`);\n    return response.data;\n  },\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}